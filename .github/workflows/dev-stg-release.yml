name: Dev/Staging BCentral Release

on:
  workflow_dispatch:
    inputs:
      bal_central_environment:
        description: Ballerina Central Environment
        type: choice
        options:
          - STAGE
          - DEV
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      BALLERINA_${{ github.event.inputs.bal_central_environment }}_CENTRAL: true

    steps:
      - uses: actions/checkout@v2

      # Set up Java Environment
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # Grant execute permission to the gradlew script
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build the project with Gradle
      - name: Build with Gradle
        env:
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          JAVA_OPTS: -DBALLERINA_DEV_COMPILE_BALLERINA_ORG=true
        run: |
          ./gradlew build -x test

      # Perform Trivy scan
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'rootfs'
          scan-ref: '.'
          skip-dirs: 'gradle/'
          format: 'table'
          timeout: '10m0s'
          exit-code: '1'

      # Push to Ballerina Staging Central
      - name: Push to Staging
        if: github.event.inputs.bal_central_environment == 'STAGE'
        run: bal push
        env:
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_STAGE_ACCESS_TOKEN }}
          WORKING_DIR: ./ballerina
          JAVA_HOME: /usr/lib/jvm/default-jvm

      # Push to Ballerina Dev Central
      - name: Push to Dev
        if: github.event.inputs.bal_central_environment == 'DEV'
        run: bal push
        env:
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_DEV_ACCESS_TOKEN }}
          WORKING_DIR: ./ballerina
          JAVA_HOME: /usr/lib/jvm/default-jvm
