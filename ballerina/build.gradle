/*
 * Copyright (c) 2023, WSO2 LLC. (http://www.wso2.org)
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

description = 'Ballerina - Azure Service Bus Ballerina Connector'

def tomlVersion = stripBallerinaExtensionVersion("${project.version}")

def ballerinaTomlFilePlaceHolder = new File("${project.rootDir}/build-config/resources/Ballerina.toml")
def ballerinaTomlFile = new File("$project.projectDir/Ballerina.toml")

def stripBallerinaExtensionVersion(String extVersion) {
    if (extVersion.matches(project.ext.timestampedVersionRegex)) {
        def splitVersion = extVersion.split('-')
        if (splitVersion.length > 3) {
            def strippedValues = splitVersion[0..-4]
            return strippedValues.join('-')
        } else {
            return extVersion
        }
    } else {
        return extVersion.replace("${project.ext.snapshotVersion}", '')
    }
}

task updateTomlFiles {
    doLast {
        def newConfig = ballerinaTomlFilePlaceHolder.text.replace('@project.version@', project.version.toString())
        newConfig = newConfig.replace('@toml.version@', tomlVersion)
        ballerinaTomlFile.text = newConfig
    }
}

task build {
    dependsOn ":${packageName}-native:build"
    dependsOn updateTomlFiles
    doLast {
        executeBalCommand ("build", "${project.projectDir}")
        executeBalCommand ("pack", "${project.projectDir}")
        executeBalCommand ("push --repository=local", "${project.projectDir}")

        def centralDir = file("${System.getProperty('user.home')}/.ballerina/repositories/central.ballerina.io/")
        def cacheDirs = centralDir.listFiles().findAll { it.isDirectory() && it.name.startsWith('cache-') }
        delete cacheDirs

        def destinationDir = new File("${System.getProperty('user.home')}/.ballerina/repositories/central.ballerina.io/bala/ballerinax/${project.balPackageName}")
        if (destinationDir.exists()) {
            delete destinationDir;
        }

        copy {
            from "${System.getProperty('user.home')}/.ballerina/repositories/local/bala/ballerinax/${project.balPackageName}"
            into destinationDir
        }
    }
}

task test {
    dependsOn ":${packageName}-native:build"
    dependsOn updateTomlFiles
    doLast {
        executeBalCommand ("test", "${project.projectDir}")
    }
}
